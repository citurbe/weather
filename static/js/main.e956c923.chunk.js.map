{"version":3,"sources":["Store/createStore.js","Api/urls.js","util/constants.js","Api/index.js","Store/actions.js","Components/Search/Search.js","Store/reducer.js","Components/ForecastChart/ForecastChart.js","util/createSeries.js","Components/Weather/Weather.js","Components/App.js","index.js"],"names":["initialState","urls","WEATHER_KEY","Api","city","metric","url","concat","axios","get","lat","lon","zip","receiveForecast","data","type","payload","getForecastByZip","arguments","length","undefined","dispatch","ForecastApi","then","response","catch","err","console","error","getForecastByCity","getForecastByLatLon","setUnits","units","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","handleClick","performSearch","oppositeValue","_this2","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","e","name","target","value","setState","defineProperty","preventDefault","friendlyName","oppositeName","react_default","a","createElement","onChange","onSubmit","className","htmlFor","href","onClick","React","Component","connect","config","bindActionCreators","weatherDefault","forecast","rootReducer","combineReducers","weather","action","assign","list","pop","population","ForecastChart","title","react_chartkick_esm","colors","color","width","createSeries","key","series","forEach","element","dt_txt","main","temp","hum","press","toLocaleString","keys","Components_ForecastChart_ForecastChart","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","es","Components_Search_Search","Components_Weather_Weather","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e956c923.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducer';\nimport thunk from 'redux-thunk';\n\nexport default initialState => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : f => f\n    )\n  );\n  return store;\n};\n","export default {\n  FORECAST_URL: 'http://api.openweathermap.org/data/2.5/forecast'\n};\n","export const WEATHER_KEY = 'a53109715fea3dd987b8d7d9307f9f3b';\n","import axios from 'axios';\nimport urls from './urls';\nimport { WEATHER_KEY } from '../util/constants';\n\nexport const getForecastByCity = (city, metric) => {\n  const url = `${urls.FORECAST_URL}?q=${city},us&units=${\n    metric ? 'metric' : 'imperial'\n  }&APPID=${WEATHER_KEY}`;\n  return axios.get(url);\n};\n\nexport const getForecastByLatLon = (lat, lon, metric) => {\n  const url = `${urls.FORECAST_URL}?lat=${lat}&lon=${lon}&units=${\n    metric ? 'metric' : 'imperial'\n  }&APPID=${WEATHER_KEY}`;\n  return axios.get(url);\n};\n\nexport const getForecastByZip = (zip, metric) => {\n  const url = `${urls.FORECAST_URL}?zip=${zip},us&units=${\n    metric ? 'metric' : 'imperial'\n  }&APPID=${WEATHER_KEY}`;\n  return axios.get(url);\n};\n\nexport default {\n  getForecastByCity,\n  getForecastByLatLon,\n  getForecastByZip\n};\n","import ForecastApi from '../Api';\n\nexport const receiveForecast = data => {\n  return { type: 'RECEIVE_FORECAST', payload: data };\n};\n\nexport const getForecastByZip = (zip, metric = false) => {\n  return dispatch => {\n    return ForecastApi.getForecastByZip(zip, metric)\n      .then(response => {\n        dispatch(receiveForecast(response.data));\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n};\n\nexport const getForecastByCity = (city, metric = false) => {\n  return dispatch => {\n    return ForecastApi.getForecastByCity(city, metric)\n      .then(response => {\n        dispatch(receiveForecast(response.data));\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n};\n\nexport const getForecastByLatLon = (lat, lon, metric = false) => {\n  return dispatch => {\n    return ForecastApi.getForecastByLatLon(lat, lon, metric)\n      .then(response => {\n        dispatch(receiveForecast(response.data));\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n};\n\nexport const setUnits = units => {\n  return { type: 'SET_UNITS', payload: units };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  getForecastByLatLon,\n  getForecastByCity,\n  getForecastByZip,\n  setUnits\n} from '../../Store/actions';\nimport './search.css';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      lat: '',\n      lon: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.performSearch();\n  }\n\n  performSearch(oppositeValue) {\n    let metric;\n    if (oppositeValue) {\n      metric = oppositeValue === 'metric';\n    } else {\n      metric = this.props.metric;\n    }\n\n    if (this.state.lat && this.state.lon) {\n      this.props.getForecastByLatLon(this.state.lat, this.state.lon, metric);\n    } else if (this.state.zip) {\n      this.props.getForecastByZip(this.state.zip, metric);\n    } else if (this.state.city) {\n      this.props.getForecastByCity(this.state.city, metric);\n    } else {\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(position => {\n          if (!position) {\n            console.error('no position found');\n          } else {\n            this.props.getForecastByLatLon(\n              position.coords.latitude,\n              position.coords.longitude,\n              metric\n            );\n          }\n        });\n      } else {\n        console.error('no geolocation available');\n      }\n    }\n  }\n\n  handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.lat && this.state.lon) {\n      this.props.getForecastByLatLon(\n        this.state.lat,\n        this.state.lon,\n        this.props.metric\n      );\n    } else if (this.state.zip) {\n      this.props.getForecastByZip(this.state.zip, this.props.metric);\n    } else if (this.state.city) {\n      this.props.getForecastByCity(this.state.city, this.props.metric);\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    const oppositeValue = this.props.metric ? 'imperial' : 'metric';\n    this.props.setUnits(oppositeValue);\n    this.performSearch(oppositeValue);\n  }\n\n  render() {\n    const friendlyName = this.props.metric ? 'Celcius' : 'Fahrenheit';\n    const oppositeName = this.props.metric ? 'Fahrenheit' : 'Celcius';\n    return (\n      <div>\n        <form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <div className=\"search__container\">\n            <label htmlFor=\"city\">City:</label>\n            <input name=\"city\" type=\"text\" />\n          </div>\n          <p>--OR--</p>\n          <div className=\"search__container\">\n            <label htmlFor=\"lat\">Latitude:</label>\n            <input name=\"lat\" type=\"text\" />\n            <label htmlFor=\"lon\">Longitude:</label>\n            <input name=\"lon\" type=\"text\" />\n          </div>\n          <p>--OR--</p>\n          <div className=\"search__container\">\n            <label htmlFor=\"zip\">Zip Code:</label>\n            <input name=\"zip\" type=\"text\" />\n          </div>\n          <input type=\"submit\" value=\"Search\" />\n        </form>\n        <div className=\"search__container\">\n          Showing temperature in {friendlyName}.{' '}\n          <a href=\"\" onClick={this.handleClick}>\n            Switch to {oppositeName}{' '}\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    metric: state.config.units === 'metric'\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      getForecastByCity,\n      getForecastByLatLon,\n      getForecastByZip,\n      setUnits\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import { combineReducers } from 'redux';\n\nconst weatherDefault = {\n  forecast: []\n};\n\nexport const config = (state = { units: 'imperial' }, action) => {\n  switch (action.type) {\n    case 'SET_UNITS':\n      return Object.assign({}, state, { units: action.payload });\n    default:\n      return state;\n  }\n};\n\nexport const weather = (state = weatherDefault, action) => {\n  switch (action.type) {\n    case 'RECEIVE_FORECAST':\n      return Object.assign({}, state, { forecast: action.payload.list });\n    default:\n      return state;\n  }\n};\n\nexport const city = (state = {}, action) => {\n  switch (action.type) {\n    case 'RECEIVE_FORECAST':\n      return Object.assign({}, state, {\n        name: action.payload.city.name,\n        pop: action.payload.city.population\n      });\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({ weather, city, config });\n\nexport default rootReducer;\n","import React from 'react';\nimport { LineChart } from 'react-chartkick';\nimport 'chart.js';\nimport './forecastChart.css';\n\nconst ForecastChart = props => {\n  return (\n    <div className=\"forecast-chart\">\n      <h4>{props.title}</h4>\n      <LineChart colors={[props.color]} data={props.data} width=\"90%\" />\n    </div>\n  );\n};\n\nexport default ForecastChart;\n","const createSeries = (data, key) => {\n  const series = {};\n  data.forEach(element => {\n    series[element.dt_txt] = element.main[key];\n  });\n  return series;\n};\n\nexport default createSeries;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ForecastChart from '../ForecastChart/ForecastChart';\nimport createSeries from '../../util/createSeries';\n\nconst Weather = props => {\n  const temp = createSeries(props.forecast, 'temp');\n  const hum = createSeries(props.forecast, 'humidity');\n  const press = createSeries(props.forecast, 'pressure');\n  return (\n    <div>\n      {props.city && (\n        <h3>\n          Showing the weather for {props.city}\n          {props.pop &&\n            `, currently being experienced by\n          ${props.pop.toLocaleString()} people!`}\n        </h3>\n      )}\n      {Object.keys(temp).length > 0 && (\n        <ForecastChart color=\"blue\" title=\"Temperature\" data={temp} />\n      )}\n      {Object.keys(hum).length > 0 && (\n        <ForecastChart color=\"orange\" title=\"Humidity\" data={hum} />\n      )}\n      {Object.keys(press).length > 0 && (\n        <ForecastChart color=\"red\" title=\"Pressure\" data={press} />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  forecast: state.weather.forecast,\n  city: state.city.name,\n  pop: state.city.pop\n});\n\nexport default connect(mapStateToProps)(Weather);\n","import React from 'react';\nimport Search from './Search/Search';\nimport configureStore from '../Store/createStore';\nimport { Provider } from 'react-redux';\nimport Weather from './Weather/Weather';\nimport './App.css';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>How's the weather?</h1>\n        </header>\n        <Search />\n        <Weather />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}